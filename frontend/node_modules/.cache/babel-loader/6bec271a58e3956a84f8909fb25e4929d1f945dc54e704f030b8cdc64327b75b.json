{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\smart-home-assistant\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [appliances, setAppliances] = useState([{\n    name: \"Refrigerator\",\n    powerUsage: 200,\n    temperature: 5,\n    maintenance: \"Loading...\"\n  }, {\n    name: \"Washing Machine\",\n    powerUsage: 800,\n    temperature: 35,\n    maintenance: \"Loading...\"\n  }, {\n    name: \"Air Conditioner\",\n    powerUsage: 1500,\n    temperature: 18,\n    maintenance: \"Loading...\"\n  }]);\n  useEffect(() => {\n    appliances.forEach((appliance, index) => {\n      fetch(\"http://127.0.0.1:5000/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          appliance: appliance.name,\n          power_usage: appliance.powerUsage,\n          temperature: appliance.temperature\n        })\n      }).then(response => response.json()).then(data => {\n        setAppliances(prevState => {\n          const updated = [...prevState];\n          updated[index].maintenance = data.prediction || \"Error fetching\";\n          return updated;\n        });\n      }).catch(error => {\n        console.error(\"Error fetching prediction:\", error);\n        setAppliances(prevState => {\n          const updated = [...prevState];\n          updated[index].maintenance = \"Error\";\n          return updated;\n        });\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Smart Home Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Power Usage (W)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temperature (\\xB0C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"AI Predicted Maintenance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appliances.map((appliance, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: appliance.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appliance.powerUsage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appliance.temperature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appliance.maintenance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"D1y0sfbXRc+K1Yd/3ls6BlTj01A=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","appliances","setAppliances","name","powerUsage","temperature","maintenance","forEach","appliance","index","fetch","method","headers","body","JSON","stringify","power_usage","then","response","json","data","prevState","updated","prediction","catch","error","console","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","map","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/smart-home-assistant/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport default function App() {\n    const [appliances, setAppliances] = useState([\n        { name: \"Refrigerator\", powerUsage: 200, temperature: 5, maintenance: \"Loading...\" },\n        { name: \"Washing Machine\", powerUsage: 800, temperature: 35, maintenance: \"Loading...\" },\n        { name: \"Air Conditioner\", powerUsage: 1500, temperature: 18, maintenance: \"Loading...\" }\n    ]);\n\n    useEffect(() => {\n        appliances.forEach((appliance, index) => {\n            fetch(\"http://127.0.0.1:5000/predict\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    appliance: appliance.name,\n                    power_usage: appliance.powerUsage,\n                    temperature: appliance.temperature\n                })\n            })\n            .then(response => response.json())\n            .then(data => {\n                setAppliances(prevState => {\n                    const updated = [...prevState];\n                    updated[index].maintenance = data.prediction || \"Error fetching\";\n                    return updated;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error fetching prediction:\", error);\n                setAppliances(prevState => {\n                    const updated = [...prevState];\n                    updated[index].maintenance = \"Error\";\n                    return updated;\n                });\n            });\n        });\n    }, []);\n\n    return (\n        <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n            <h2>Smart Home Assistant</h2>\n            <table border=\"1\" cellPadding=\"10\">\n                <thead>\n                    <tr>\n                        <th>Appliance</th>\n                        <th>Power Usage (W)</th>\n                        <th>Temperature (Â°C)</th>\n                        <th>AI Predicted Maintenance</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {appliances.map((appliance, index) => (\n                        <tr key={index}>\n                            <td>{appliance.name}</td>\n                            <td>{appliance.powerUsage}</td>\n                            <td>{appliance.temperature}</td>\n                            <td>{appliance.maintenance}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}